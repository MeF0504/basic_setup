# POSIX compliant shell Run Command file.
# vim: set filetype=sh:

# checker:: https://www.shellcheck.net/
# memo:: https://qiita.com/richmikan@github/items/bd4b21cf1fe503ab2e5c

##{{{ Environment variable configuration
#
# LANG
#
export LANG=ja_JP.UTF-8
case $(id -u) in
0)
    LANG=C
    ;;
esac

export XDG_CONFIG_HOME=~/.config

#}}}

##{{{ Alias configuration

alias where="command -v"

alias j="jobs -l"

case "$(uname)" in
FreeBSD*|Darwin*)
    alias ls="ls -G -w"
    ;;
Linux*)
    alias ls="ls --color -F"
    ;;
esac

alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
alias l="ls"
alias c="cd"

# check if already exists
alias cp="cp -i"
alias mv="mv -i"

# make directory recursively
alias mkdir="mkdir -p"

# change the unit
alias du="du -h"
alias df="df -h"

alias su="su -l"
alias grep="grep --color"

# vim
alias vi='vim -p'

alias del="mv_Trash.py"

## if use terminology [https://www.enlightenment.org/about-terminology.md]
if [ "$TERMINOLOGY" = 1 ]; then
    alias ls="tyls -m"
fi

## remote host
if [ "$SSH_CLIENT" != "" ]; then
    alias su=''
    alias sudo=''
fi

if [[ ${VIM_TERMINAL}  != "" ]]; then
    alias vim="echo already opened vim. "
    alias vi="echo already opened vim. "
fi

alias global_ip="curl ifconfig.io 2> /dev/null"
alias iv='for i in {4..1}; do; echo -n $i..\ ;sleep 1;done; echo'

#}}}

##{{{ terminal configuration

case "${TERM}" in
xterm|xterm-color|xterm-256color)
    export LSCOLORS=exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    ;;
kterm-color)
    stty erase '^H'
    export LSCOLORS=exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    ;;
kterm)
    stty erase '^H'
    ;;
cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    ;;
jfbterm-color)
    export LSCOLORS=gxFxCxdxBxegedabagacad
    export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    ;;
esac

#}}}

## {{{added functions

add_env() {
    # {{{
    if [[ "$1" = "" ]] || [[ "$1" =~ ^\- ]]; then
        echo "
    usage: add_env dir 

    add dir/*/bin to PATH
    add dir/*/lib and path/*/lib64 to LD_LIBRARY_PATH and DYLD_LIBRARY_PATH
    add dir/*/share/man to MANPATH

    positional arguments:
        dir    : path to the target directory
        "
        return
    fi

    for d in $(find "$1"/* -maxdepth 0);
    do
        #echo $d
        #echo "---"
        if [ -d "$d"/bin ]; then
            export PATH=$d/bin:$PATH
        fi
        if [ -d "$d"/lib ]; then
            export LD_LIBRARY_PATH=$d/lib:$LD_LIBRARY_PATH
            export DYLD_LIBRARY_PATH=$d/lib:$DYLD_LIBRARY_PATH
        fi
        if [ -d "$d"/lib64 ]; then
            export LD_LIBRARY_PATH=$d/lib64:$LD_LIBRARY_PATH
            export DYLD_LIBRARY_PATH=$d/lib64:$DYLD_LIBRARY_PATH
        fi
        if [ -d "$d"/share/man ]; then
            export MANPATH=$d/share/man:$MANPATH
        fi
    done
# }}}
}

## pseudo-tree http://osxdaily.com/2016/09/09/view-folder-tree-terminal-mac-os-tree-equivalent/
## argument analysis https://qiita.com/b4b4r07/items/dcd6be0bb9c9185475bb
ki() {
    # {{{
    echo_usage="
    usage: ki [-ah] [dir]

    pseudo-tree (ki).
    list contents of directories in a tree-like format.

    positional arguments:
        dir     : root directory
    optional arguments:
        -a      : do not ignore entries starting with .
        -h      : print this help message and exit.
    "

    local dot_opt=' -name ".?*" -prune -or '
    local dir='.'

    for OPT in "$@"
    do
        case $OPT in
            -*)
                if [[ "$1" =~ 'a' ]]; then
                    local dot_opt=""
                fi
                if [[ "$1" =~ 'h' ]]; then
                    echo "$echo_usage"
                    unset OPT
                    return
                fi
                ;;
            ?*)
                # remove slash; https://ozuma.hatenablog.jp/entry/20130928/1380380390
                local dir=${OPT%/}
                if [[ "$dir" =~ .*/.* ]]; then
                    echo "${dir%/*}"
                fi
                ;;
        esac
    done
    unset OPT

    eval find "$dir" "$dot_opt" -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
# }}}
}

weather() {
    # {{{
    # Tokyo, Sapporo, SanFrancisco, moon, etc..
    local city=$1
    for x in "${@:2}"; do
        city=$city+$x
    done
    curl wttr.in/"$city"
# }}}
}

function del_func() {
    # {{{
    del_trash=${del_trash:-$HOME/.Trash}
    # https://qiita.com/tdrk/items/cc2995fd74e659ea948f
    if [[ ! -d "${del_trash}" ]]; then
        \mkdir -p "${del_trash}"
    fi
    footer=$(date "+%m%d_%H%M%W")
    for fp in "$@"; do
        touch "$fp"   # update timestamp.
        fn=$(basename "${fp}")
        if [[ -e "${del_trash}"/"${fn}" ]]; then
            \mv "$fp" "${del_trash}"/"${fn}"_"${footer}"
        else
            \mv "$fp" "${del_trash}"
        fi
    done
# }}}
}
# I recommend using mv_Trash.py if possible.
# alias del=del_func

function mkcd() {
    if [[ ! -d "$1" ]]; then
        echo mkdir "$1"
        mkdir -p "$1"
    fi
    \cd "$1"
}

#}}}

