# POSIX compliant shell Run Command file.
# vim: set filetype=sh:

# checker:: https://www.shellcheck.net/
# memo:: https://qiita.com/richmikan@github/items/bd4b21cf1fe503ab2e5c

##{{{ Environment variable configuration
# LANG
export LANG=ja_JP.UTF-8
case $(id -u) in
0)
    LANG=C
    ;;
esac

export XDG_CONFIG_HOME=~/.config

# sourceなら$0で行けるかと思ったけど，zshだとsourceでも$0がスクリプト名になる
# ので，https://tkuchiki.hatenablog.com/entry/2014/05/08/222135 を参考にした
# sourceならプロセスは変わらないので，$$でOK
if  ps -p $$ | grep -qs zsh ; then
    export SHELL_INFO=' Z'
elif ps -p $$ | grep -qs bash ; then
    export SHELL_INFO='ba'
elif ps -p $$ | grep -qs ' sh' ; then
    # shは全部に当てはまっちゃうので' sh'で探す
    export SHELL_INFO='sh'
else
    export SHELL_INFO='??'
fi
# vim上で開いてたらv, 他はshellの深さ -> https://www.atmarkit.co.jp/flinux/rensai/linuxtips/529shelldep.html
if [[ -n $VIM ]]; then
    export SHELL_INFO="${SHELL_INFO}-v"
else
    export SHELL_INFO="${SHELL_INFO}-${SHLVL}"
fi

# 使うvimも指定したい
export _USE_VIM=""

# DISPLAYがない場合は設定したほうが良いの？
if [[ -z "$DISPLAY" || "$DISPLAY" = "needs-to-be-defined" ]]; then
    echo 'set DISPLAY'
    export DISPLAY=localhost:0.0
fi
#}}}
##{{{ Alias configuration
# search command
alias where="command -v"
# job
alias j="jobs -l"
# ls
case "$(uname)" in
FreeBSD*|Darwin*)
    alias ls="ls -G -w"
    ;;
Linux*)
    alias ls="ls --color -F"
    ;;
esac
alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
# shortcut
alias l="ls"
alias c="cd"
# check if already exists
alias cp="cp -i"
alias mv="mv -i"
# make directory recursively
alias mkdir="mkdir -p"
# change the unit
alias du="du -h"
alias df="df -h"
# useful options
alias su="su -l"
alias grep="grep --color --exclude-dir=.git"
# move files to trash.
alias del="mv_Trash.py"
## if use terminology [https://www.enlightenment.org/about-terminology.md]
if [ "$TERMINOLOGY" = 1 ]; then
    _ls_wrapper()
    {
        if [ "$#" -eq 0 ]; then
            tyls -m
        else
            ls "$@"
        fi
    }
    alias ls="_ls_wrapper"
fi
## remote host
if [ -n "$SSH_CLIENT" ]; then
    alias su='echo "su is not available in remote host"'
    alias sudo='echo "sudo is not available in remote host"&&'
fi
# vim terminal
if [ -n "${VIM_TERMINAL}" ]; then
    alias vim="echo 'already opened vim.'"
    alias vi="echo 'already opened vim.'"
fi
# others
alias global_ip="curl ifconfig.io 2> /dev/null"
alias iv='for iv in {4..1}; do; echo -n ${iv}..\ ;sleep 1;done; echo; vim_wrapper '
# OS specified aliases
if [ "$(uname)" = "Darwin" ]; then
    alias ldd="echo 'in macOS, ldd doesn't exist. && echo 'Use otool -L instead.' && echo '----------' &&  otool -L"
    alias cpu_temp='sudo powermetrics -n 1 | grep temperature'
elif [ "$(uname)" = "Linux" ]; then
    : # do nothing now.
fi
#}}}
##{{{ terminal configuration

# https://gist.github.com/thomd/7667642
case "${TERM}" in
xterm|xterm-color|xterm-256color)
    export LSCOLORS=Exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=94:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    ;;
kterm-color)
    stty erase '^H'
    export LSCOLORS=Exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=94:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    ;;
kterm)
    stty erase '^H'
    ;;
cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    ;;
jfbterm-color)
    export LSCOLORS=gxFxCxdxBxegedabagacad
    export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    ;;
esac

#}}}
## {{{added functions
_chk_and_source() # {{{
{
    [[ -f "$1" ]] && source "$1"
}
# }}}
vim_wrapper() # {{{
{
    if [[ -x $(which "$_USE_VIM" 2> /dev/null) ]]; then
        local use_vim=$_USE_VIM
    else
        local use_vim="vim"
    fi
    $use_vim -p "$@"
}
alias vi=vim_wrapper
# }}}
timeout_local() # {{{
{
    # https://qiita.com/yohm/items/db6aea3cbc71ab2d55bd
    time=$1

    # start the command in a subshell to avoid problem with pipes
    # (spawn accepts one command)
    command="/bin/sh -c \"${@:2}\""

    /usr/bin/expect -c "set timeout $time; spawn -noecho $command; expect timeout { exit 124 } eof; catch wait result; exit [lindex \$result 3];"
} # }}}
if [[ -d "$HOME/.psfuncs" ]]; then
    OLD_IFS=$IFS
    if [[ "$0" = "bash" ]]; then
        IFS=$'\n'
    else
        IFS='
'
    fi
    for dir in $(find "$HOME/.psfuncs" -type f); do
        _chk_and_source $dir
    done
    IFS=$OLD_IFS
    unset dir
    unset OLD_IFS
fi
#}}}

