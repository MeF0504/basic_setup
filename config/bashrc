# vim: set filetype=sh:

# read shell-independent Run Command file.
# maybe update to set the path dynamically.
if [[ -f ${HOME}/.posixShellRC ]]; then
    source $HOME/.posixShellRC
else
    echo "[posix shell rc] not found!"
fi

##{{{ prompt
# useful: https://qiita.com/hmmrjn/items/60d2a64c9e5bf7c0fe60
# path
export PS1='\[\e[46m\]${PWD}\[\e[0m\]\n'
if [[ ${SSH_CLIENT} != "" ]]; then
    # host name
    export PS1='\[\e[36m\]${HOSTNAME%%.*}\[\e[0m\] '$PS1
fi
# time
export PS1=$PS1'\[\e[32m\]\D{%H:%M}\[\e[0m\]'
# user name (bold)
export PS1=$PS1' \[\e[1m\e[31m\]\u\[\e[0m\]'

# git information
GITPROMPT=${HOME}/.bash/git-prompt.sh
if [[ -f $GITPROMPT ]]; then
    # unstaged (*) and staged (+) are shown
    export GIT_PS1_SHOWDIRTYSTATE=1
    source $GITPROMPT
    export PS1=$PS1' $(__git_ps1 "(%s)")'
fi

# change red if the previous command was failed.
# https://qiita.com/rtakasuke/items/4b50e156ab82b0824676
export PS1=$PS1" \`
if [ \$? = 0 ]; then
    echo '\$';
else
    echo \[\e[35m\]\$\[\e[0m\];
fi
 \` "

# }}}

##{{{ key bind
# ctrl-b,f で前後の単語に移動
# https://qiita.com/yamamoto_hiroya/items/2f5c549c2da25cb9eb78
bind '"\C-f": forward-word'
bind '"\C-b": backward-word'

# <c-w>で消す際に/単位で削除
# https://qiita.com/yamamoto_hiroya/items/9d569010cf0be4719b6c
stty werase undef
bind '"\C-w": unix-filename-rubout'

# ctrl-p, nでhistoryの一致検索
bind '"\C-p": history-search-backward'
bind '"\C-n": history-search-forward'

# }}}

## {{{ history
# https://www.na3.jp/entry/20100727/p1
# historyの保存ファイル
export HISTFILE=~/.bash_history
# historyの保存数?
export HISTSIZE=10000
# HISTFILEに保存する行数
export HISTFILESIZE=10000
# 直前と同じコマンドは残さない:spaceで始まるコマンドは残さない
# export HISTCONTROL=ignorespace:ignoredups
# 上の2つを同時に適用
export HISTCONTROL=ignoreboth
# 特定のコマンドを記録に残さない
export HISTIGNORE=pwd:history:ls

# }}}

##{{{ load user .bashrc configuration file
#
[ -f $HOME/.bash/bashrc.mine ] && source $HOME/.bash/bashrc.mine
# }}}

