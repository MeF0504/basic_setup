# users generic .zshrc file for zsh(1)

##{{{ Environment variable configuration
#
# LANG
#
export LANG=ja_JP.UTF-8
case ${UID} in
0)
    LANG=C
    ;;
esac

export XDG_CONFIG_HOME=~/.config

#}}}

##{{{ Default shell configuration
#
# set prompt
#
autoload colors
colors
case ${UID} in
0)
    PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') %B%{${fg[red]}%}%/#%{${reset_color}%}%b "
    PROMPT2="%B%{${fg[red]}%}%_#%{${reset_color}%}%b "
    SPROMPT="%B%{${fg[yellow]}%}%r is correct? [n,y,a,e]:%{${reset_color}%}%b "
    ;;
*)
    local short="%{${fg[red]}%}%/ S%{${reset_color}%} "
    #local long="%F{red}%(5~,%-1~/.../%2~,%~)%%%f "
    local long="%{${fg[red]}%}%(4/,%-1/.../%2/,%/) L%{${reset_color}%} "
    PROMPT="%4(/|$long|$short)"
    ## from http://0xcc.net/blog/archives/000032.html
    #PROMPT="%{${fg[red]}%}%~%%%{${reset_color}%} "
    PROMPT2="%{${fg[red]}%}%_%%%{${reset_color}%} "
    SPROMPT="%{${fg[yellow]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
    if [ -n "${REMOTEHOST}${SSH_CONNECTION}" ]; then
        PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
        #PROMPT="%F{cyan}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]')%f ${PROMPT}"
    else
        PROMPT="%{${fg[green]}%}%T%{${reset_color}%} ${PROMPT}"
    fi
    ;;
esac

# show git status in right prompt
#
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' max-exports 6 # formatに入る変数の最大数
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr " %{${fg[yellow]}%}need commit%{${reset_color}%}"
zstyle ':vcs_info:git:*' unstagedstr " %{${fg[red]}%}need add%{${reset_color}%}"
zstyle ':vcs_info:git:*' formats "%{${fg[green]}%}GIT%{${reset_color}%}%c%u"
zstyle ':vcs_info:git:*' actionformats '! %a %c %u'
setopt prompt_subst

function rprom() {
    vcs_info
    RPROMPT="${vcs_info_msg_0_}"
    #echo $RPROMPT
}
add-zsh-hook precmd rprom


# auto change directory
#
setopt auto_cd

# auto directory pushd that you can get dirs list by cd -[tab]
#
setopt auto_pushd

# command correct edition before each completion attempt
#
setopt correct

# compacked complete list display
#
setopt list_packed

# no remove postfix slash of command line
#
setopt noautoremoveslash

# no beep sound when complete list displayed
#
setopt nolistbeep
#}}}

##{{{ Keybind configuration
#
# emacs like keybind (e.x. Ctrl-a gets to line head and Ctrl-e gets
#   to end) and something additions
#
bindkey -e
bindkey "^[[1~" beginning-of-line # Home gets to line head
bindkey "^[[4~" end-of-line # End gets to line end
bindkey "^[[3~" delete-char # Del

# historical backward/forward search with linehead string binded to ^P/^N
#
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end

# reverse menu completion binded to Shift-Tab
#
bindkey "\e[Z" reverse-menu-complete
#}}}

##{{{ Command history configuration
#
HISTFILE=${HOME}/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
setopt hist_ignore_dups     # ignore duplication command history list
setopt hist_ignore_space    # ignore command starting with space
setopt share_history        # share command history data
#}}}

##{{{ Completion configuration
#
fpath=(${HOME}/.zsh/functions/Completion ${fpath})
autoload -U compinit
compinit
#}}}

##{{{ zsh editor
#
autoload zed
#}}}

##{{{ Prediction configuration
#
#autoload predict-on
#predict-off
#}}}

##{{{ Alias configuration
#
# expand aliases before completing
#
setopt complete_aliases     # aliased ls needs if file/dir completions work

alias where="command -v"
alias j="jobs -l"

case "${OSTYPE}" in
freebsd*|darwin*)
    alias ls="ls -G -w"
    ;;
linux*)
    alias ls="ls --color -F"
    ;;
esac

alias -g H='| head'
alias -g T='| tail'
alias -g W='| wc'
alias -g G='| grep'
alias -g L='| less -R'

alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
alias l="ls"
alias c="cd"

alias cp="cp -i"
alias mv="mv -i"

alias du="du -h"
alias df="df -h"

alias su="su -l"
alias grep="grep --color -n"

alias zshhistory="vi -R ~/.zsh_history"

alias rm="mv_Trash.py"

if [[ $TERMINOLOGY -eq 1 ]]; then
    alias ls="tyls -m"
fi
#}}}

##{{{ hook function setting
# cdpwd ()
#{
    #\cd "$@" && pwd
#}
#alias cd="cdpwd"

#chpwd関数を定義しておくとzshがcd後に勝手に実行してくれる。
#function chpwd() {pwd; echo -ne "\033]0;${USER}@${HOST}\007"}
function chpwd() {
    pwd
    if [[ -e .git ]]; then
        #echo "%{${fg[yellow]}%}check git repo is up-to-date%{${reset_color}%}"
        #echo "\033[33mcheck git repo is up-to-date  (---> git fetch) \033[0m"
        echo "fetching..."
        git fetch
    fi
}
#from http://qiita.com/dai___chi/items/135d063444d152e63e1c
#}}}

##{{{ terminal configuration
#
#case "${TERM}" in
#screen)
    #TERM=xterm-256color
    #;;
#esac

export TERM=xterm-256color

case "${TERM}" in
xterm|xterm-color|xterm-256color)
    export LSCOLORS=exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34' 'tw=42;31' 'ow=43;31'
    ;;
kterm-color)
    stty erase '^H'
    export LSCOLORS=exfxcxdxbxegedabagbcbd
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;31:ow=43;31'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34' 'tw=42;31' 'ow=43;31'
    ;;
kterm)
    stty erase '^H'
    ;;
cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
jfbterm-color)
    export LSCOLORS=gxFxCxdxBxegedabagacad
    export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;36;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
esac

# set terminal title as username+HOSTNAME
#

if [[ ${SSH_CLIENT} == "" ]]; then
    HOSTNAME="local"
else
    HOSTNAME=${HOST%%.*}
fi

case "${TERM}" in
xterm|xterm-color|kterm|kterm-color|xterm-256color)
    precmd() {
        #echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
        echo -ne "\033]0;${USER}@${HOSTNAME}\007"
    }
    ;;
esac
#}}}

## {{{added functions
#check the terminal can display 256colors
function 256colortest() {
    local code
    for code in {0..255}; do
        echo -e "\e[38;05;${code}m $code: Test"
    done
}
alias 256colortest="256colortest | less -R"

#use python on shell
function p(){
    /usr/bin/env python -c "print $@"
    #echo $@
}
#}}}

## {{{ OS dependent settings
if [ "$(uname)" = "Darwin" ]; then
    alias ad_space="defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type=\"spacer-tile\";}' && killall Dock"
    alias ldd="otool -L"

elif [ "$(uname)" = "Linux" ]; then
    # do nothing now.
fi
#}}}

##{{{ load user .zshrc configuration file
#
[ -f ${HOME}/.zshrc.mine ] && source ${HOME}/.zshrc.mine
#}}}

