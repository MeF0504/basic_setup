#! /usr/bin/env python3

import os
import subprocess
import glob
import argparse

def linux(files, thr, force=False):
    img_files = []
    pdf_files = []
    for f in files:
        ext = f[f.rfind('.')+1:].lower()
        if (ext in 'png jpg jpeg miff'.split(' ')):
            img_files.append(f)
        elif (ext in 'pdf'.split(' ')):
            pdf_files.append(f)
        else:
            continue

    fnum = len(img_files)+len(pdf_files)
    if fnum == 0:
        print('open 0 files')
        return

    if not force:
        if fnum > thr:
            yn = input('open files: {}\tOK? (y/[n])'.format(fnum))
            if yn != 'y':
                return
        else:
            print('open files: {}'.format(fnum))

    for fy in img_files:
        judge = subprocess.call('display {} &'.format(fy), shell=True)
        if judge != 0:
            break

    for fy in pdf_files:
        judge = subprocess.call('evince {} &'.format(f), shell=True)
        if judge != 0:
            break

def mac(files, thr):
    f2 = ''
    cnt = 0
    for f in files:
        ext = f[f.rfind('.')+1:].lower()
        if ext in 'png jpg jpeg miff pdf'.split(' '):
            f = f.replace(' ','\ ')
            f2 += ' '+f
            cnt += 1

    #print f2
    if cnt > thr:
        yn = input('open files: {}\tOK? (y/[n])'.format(cnt))
        if yn != 'y':
            return
    else:
        print('all files: {}'.format(cnt))
    subprocess.call('open -a Preview '+f2,shell=True)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('figs',help="figures: file type=('png','jpg','jpeg','MIFF','pdf')",nargs='*')
    parser.add_argument('-f','--force',help='show images w/o no check',action='store_true')
    parser.add_argument('-n',dest='num',help='number of showing figures',type=int)
    parser.add_argument('-t', '--threshold', help='the number of files that this command doesn\'t ask "open?"', type=int, default=3)
    args = parser.parse_args()
    if len(args.figs)==0:
        files = glob.glob('./*')
    else:
        files = []
        for fig in args.figs:
            if os.path.isdir(fig):
                files += glob.glob(os.path.join(fig,'*'))
            elif os.path.isfile(fig):
                files.append(fig)
    # for fy in files: print(fy)
    # print(len(files))
    if hasattr(args,'num'):
        files = files[:args.num]

    if os.uname()[0] == 'Linux': linux(files,args.force, args.threshold)
    if os.uname()[0] == 'Darwin': mac(files, args.threshold)

