#! /usr/bin/env python3

import sys
import argparse
from importlib import metadata


def print_err(msg: str) -> None:
    print(f'\033[31m{msg}\033[0m', file=sys.stderr)


def main(args):
    all_packs = {dst.metadata['Name']: dst
                 for dst in metadata.distributions()}
    if args.all:
        packages = list(all_packs.keys())
        packages.sort()
    else:
        packages = []
        for p in args.packages:
            if p in all_packs:
                packages.append(p)
            else:
                print_err(f'{p} is not in the installed packages.')
    if len(packages) == 0:
        print_err('No packages are specified.')
        return
    for pack in packages:
        p_info = all_packs[pack]
        ver = p_info.version
        print(f'- {pack} ({ver})')
        if p_info.requires is not None:
            for req in p_info.requires:
                if 'extra' in req and not args.extra:
                    continue
                print(f'    |_ {req}')
                if args.recursive:
                    req_name = req.split(' ')[0]
                    if req_name in all_packs:
                        p_info2 = all_packs[req_name]
                        if p_info2.requires is not None:
                            for req2 in p_info2.requires:
                                if 'extra' in req2 and not args.extra:
                                    continue
                                print(f'    | |_ {req2}')


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('packages', nargs='*', help='shown packages')
    parser.add_argument('--all', action='store_true',
                        help='show all packages')
    parser.add_argument('-r', '--recursive', action='store_true',
                        help='show the dependencies recursively.')
    parser.add_argument('-e', '--extra', action='store_true',
                        help='show extra requirements')
    args = parser.parse_args()
    main(args)
