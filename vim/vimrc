" encoding setting
" encoding setting for vim system
set encoding=utf-8
" encoding setting for current buffer
set fileencoding=utf-8
" encoding setting for all buffer
set fileencodings=utf-8
" encoding setting for vim script
scriptencoding utf-8

" viとの互換性をとらない
set nocompatible
" 文字の色づけ ... onだと現状の設定を破棄する。詳しくは:h :syntax-on
syntax enable
""########## tips {{{
" ##### shortcut comment
" <c-h> ... backspace <c-m> ... Enter
" <c-i> ... tab <c-j> ... Down

" ##### useful command
" :set          ... Show all options that differ from their default value.
" :set all      ... Show all but terminal options.
" :set termcap  ... Show all terminal options.
" :map          ... Show all mapping settings.
" :highlight    ... Show all highlight settings.
" :command       ... Show all user commands.

" ##### spell check
" information; :h spell or https://vim-jp.org/vimdoc-ja/spell.html
" on; :setlocal spell spelllang=en_us
" search;
" 次を検索 ]s or ]S
" 前を検索 [s or [S
" (カーソル下を)正しい(good)単語として登録      zg or :spe[llgood] {word}
" (カーソル下を)間違った(wrong)単語として登録   zw or :spellw[rong] {word}
" (カーソル下の?)単語を一覧から削除             zuw / zug / :spellu[ndo] {word}

" ##### other topics
" about command args... <f-args>=string, <args>=value
" about equation operator ...  (sorry for Japanese)
"   ==#, !=#, ># etc..    ：大文字小文字を区別する
"   ==?, !=?, >? etc..    ：大文字小文字を区別しない
"   =~, =~#, =~?          ：正規表現マッチ
"   !~, !~#, !~?          ：正規表現非マッチ
" 正規表現については :h pattern-overview or https://vim-jp.org/vimdoc-ja/pattern.html#pattern-overview
" about SID
" :scriptnames          ... List all sourced script names
" :echo expand('<SID>') ... Get the current file SID
" :filter {str} {cmd} ... restrict the output.

" about <Cmd>
" mapping でcmd modeに移るときは : よりも <Cmd> の方が良さそう
" :h map-cmd
" 使用できるのは ver. 8.2 && patch-1978 以降

"" }}}
if exists('$VIM_TERMINAL')
    echoerr 'Warning!! vim is already opened!!'
endif

if 0
    augroup viminitlocal
        autocmd!
        autocmd SourcePre * call meflib#debug#debug_log(expand('<afile>'), 'source pre')
        autocmd SourcePost * call meflib#debug#debug_log(expand('<afile>'), 'source post')
    augroup END
endif

try
    let s:vimdir = meflib#basic#get_conf_dir()
catch
    echomsg 'meflib not found. So, no files are sourced.'
endtry

function! s:source_file(filename, conf) abort
    if exists('s:vimdir') && filereadable(s:vimdir..a:filename) && a:conf
        execute 'source '..s:vimdir..a:filename
        return 1
    endif
    return 0
endfunction

" local settings before source vimrcs
call s:source_file('rcdir/vimrc_mine.pre', 1)
" option settings
call s:source_file('rcdir/vimrc_options.vim', 1)
" map(key) settings
call s:source_file('rcdir/vimrc_maps.vim', 1)
" simple commands and short functions
call s:source_file('rcdir/vimrc_commands.vim', !exists('g:vscode'))
" vim commands for VS code.
call s:source_file('rcdir/vimrc_vscode_command.vim', exists('g:vscode'))
" auto command settings
call s:source_file('rcdir/vimrc_autocmds.vim', !exists('g:vscode'))
" status line setting
call s:source_file('rcdir/vimrc_statusline.vim', !exists('g:vscode'))
" tab line setting
call s:source_file('rcdir/vimrc_tabline.vim', !exists('g:vscode'))
" (almost) self-made functions
call s:source_file('rcdir/vimrc_plugin.vim', !exists('g:vscode'))
" vim dein (plugin manager) setting
" call s:source_file('rcdir/vimrc_dein.vim', !exists('g:vscode'))
" vimPlug (plugin manager) setting
call s:source_file('rcdir/vimrc_vimplug.vim', 1)
" color settings
if !has('gui_running') && (&t_Co == 256)
    if !s:source_file('rcdir/vimrc_color.vim', !exists('g:vscode'))
        " In case vim doesn't source vimrc_color.vim
        colorscheme evening
        highlight Normal ctermbg=0 guibg=Black
        highlight DiffAdd ctermfg=15 ctermbg=4 guifg=White guibg=DarkBlue
        highlight DiffChange ctermfg=15 ctermbg=5 guifg=White guibg=DarkMagenta
        highlight DiffDelete ctermfg=15 ctermbg=6 guifg=White guibg=DarkCyan
        highlight DiffText ctermfg=15 ctermbg=9 guifg=White guibg=Red
    endif
endif
" local settings after source vimrcs
call s:source_file('rcdir/vimrc_mine.post', 1)

