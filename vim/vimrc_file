"vimrcを再読込する際にautocmdが重複しないようにautocmdをすべて解除
autocmd!

"左端に数字を表示
set number
"常にステータスラインを表示
set laststatus=2
"カーソルの位置を表示
set ruler
"コマンドラインの画面上の行数
set cmdheight=2
"文の折り返し
set wrap
"タイトルを非表示
set notitle
"viとの互換性をとらない
set nocompatible
"タブの幅
set tabstop=4
"自動でインデントを挿入
set autoindent
"オートインデントの幅
set shiftwidth=4
"文字の色づけ
syntax on
"検索したときにハイライト
set hlsearch
"バックスペースのノーマルモード、(改行、)オートインデントへの有効化
set backspace=start,indent
"set backspace=start,eol,indent
"挿入モードでのマウスの有効化
set mouse=i
"全モードでのマウスの有効化
"set mouse=a
"タブをスペースに変換
set expandtab
"連続した空白でtabやback spaceが動く幅
set softtabstop=4
"日本語OKに
set fileencoding=utf-8
"大文字、小文字を区別しない
set ignorecase
"検索文字に大文字があると区別する
set smartcase
"タブとかを可視化?
"set listchars=tab:»-,trail:-,extends:»,precedes:«,nbsp:%,eol:↲
"clipboardとyankを共有 (+clipboardが条件)
"set clipboard+=unnamed
"カーソルが上下５行に行ったらスクロール
set scrolloff=5

"let g:hybrid_use_Xresources = 1
"colorscheme hybrid
"全角スペース表示
hi ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
match ZenkakuSpace /　/

"カーソルの下に下線を表示
set cursorline

"ls in vim
command! LS split .

"tag設定
set tags=tags;,./tags;
let Tlist_Exit_OnlyWindow = 1
let Tlist_WinWidth = 45
set splitbelow
nnoremap <c-]> g<c-]>
"escでtag listから抜ける
autocmd FileType taglist nnoremap <Esc> <c-w>l
"terminal上だと矢印キーでの挙動がおかしくなるので、強制的にmapping
"入力方法はc-vから矢印
nnoremap OA k
nnoremap OB j
nnoremap OD h
nnoremap OC l

"taglistを縦分割で使う際に横ではなく下にlistが出るように変更する関数
function! Tlist_Horizon()
    let g:Tlist_Use_Horiz_Window=1
    autocmd! Filetype taglist nnoremap <Esc> <c-w>k
endfunction


"vimgrepした際に新規windowで開くようにする
autocmd QuickFixCmdPost *grep* cwindow

"誤って使うとまずいkeymapを削除
nnoremap ZZ <Nop>
nnoremap ZQ <Nop>
nnoremap Q <Nop>

"使いやすいようにmapping
nnoremap s <c-w>
nnoremap T :tabnew
nnoremap t gt

"ヘッダーファイルをタブで開く
nnoremap gf <c-w>gf

"検索pathを追加
set path+=../include
if exists("$PYTHONPATH")
    set path+=$PYTHONPATH
endif
if exists("$LD_LIBRARY_PATH")
    set path+=$LD_LIBRARY_PATH
endif

"Execute python script Ctrl-P
function! s:ExecPy()
    exe "!" . &ft . " %"
    :endfunction
    command! Exec call <SID>ExecPy()
    autocmd FileType python map <silent> <C-P> :call <SID>ExecPy()<CR>

"pluginの設定読み込み
if isdirectory(expand("~/.vim/plugin"))
    source ~/.vim/rcdir/vimrc.plugin
endif

"dein directoryがあれば読み込み
if isdirectory(expand("~/.vim/dein"))
    source ~/.vim/rcdir/vimrc.dein
endif

"local設定ファイル
source ~/.vim/rcdir/vimrc.mine

"カラーの変更
if filereadable(expand("~/.vim/colors/inkpot.vim"))
    colorscheme inkpot
    source ~/.vim/rcdir/vimrc.color
else
    colorscheme desert
endif
