*meflib-pythonmemo.jax* 雑多メモ

==============================================================================
CONTENTS                                            *meflib-pythonmemo-contents*

format    |meflib-pythonmemo-format|

==============================================================================
FORMAT                                                *meflib-pythonmemo-format*

ref: https://www.javadrive.jp/python/string/index24.html

format: "{:[[fill]align][sign][#][width][grouping][.precision][type]}"

type

- 文字列向け
  "s": 文字列
  None: "s"と同じ
- 数値向け
  "b": 2進数
  "c": 文字
  "d": 10進数
  "o": 8進数
  "x": 16進数
  "X": 16進数（大文字）
  "x": 数値。ロケールに従って区切り文字が入る以外は"d"と同じ
  None: "d"と同じ
- 浮動小数点，10進数向け
  "e": 指数表記（eを使用）
  "E": 指数表記（Eを使用）
  "f": 固定小数点表記
  "F": 固定小数点表記（大文字）
  "g": 指定した精度で丸めた上で桁に応じて固定小数点か指数表記で表示
  "G": 大文字を使う以外は"g"と同じ
  "n": ロケールに従って区切り文字が入る以外は"g"と同じ
  "%": 数値を100倍し"f"でパーセントを付けて表示
  None: "g"と同様だが固定小数点の時に小数点のあとに少なくとも1つの数字がある

width

最小限確保される桁数。文字列はデフォルトで左詰め，数値は右詰め。

fill-align

文字の配置(align)と埋める文字(fill)の指定。
- fill
  "<": 左詰め
  ">": 右詰め
  "^": 中央揃え
  "=": 符号と値の間をfillで埋めて表示
  widthが無いと余白は生まれないので意味無し。fillは任意の1文字。

sign

符号の付け方。
  "+": 正の数，負の数ともに符号をつける
  "-": 負の数だけに符号をつける（デフォルト）
  " ": 正の数では数値の前に空白をつける

grouping

数値の区切り文字。"," か"_"が使えるらしい。

.precision

小数点の精度（桁数）の指定。デフォルトだと6桁。ドット"."の後に数字を書く。
例: `print("{:.3f}".format(1.2345))`

#

別形式オプション。指定すると2進数，8進数，16進数で先頭に"0b", "0o",
"0x"がつくらしい。
例: `print("{:#c}".format(32))`

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
