"vim script encording setting
scriptencoding utf-8
""vim plugin setting
"

"""""seiya.vim "{{{
"vimの背景を透過
let g:seiya_auto_enable=1
"}}}

"""""taglist.vim "{{{
let Tlist_Exit_OnlyWindow = 1
let Tlist_Show_One_File = 1
" 幅の設定
" gui offのときは自動で幅が変わらないようにする (バグる)
if has('gui_running')
    let Tlist_WinWidth = 45
    let g:Tlist_Inc_Winwidth = 1
else
    let Tlist_WinWidth = 35
    let g:Tlist_Inc_Winwidth = 0
endif
"set splitbelow
"<space>をlocal用のmappingにする。
nnoremap <silent> <Leader>t :Tlist<CR>
"]でtag listから抜ける
"autocmd local FileType taglist nnoremap <buffer> <Esc> <c-w>p
autocmd local FileType taglist nnoremap <buffer> ] <c-w>l <c-w>k

"}}}

"""""NERDTree "{{{
"Bookmarkをデフォルト表示
let g:NERDTreeShowBookmarks=1
"見栄え
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable  = '>'
let g:NERDTreeDirArrowCollapsible = '!'
"右側に表示
let g:NERDTreeWinPos="right"

"参考:https://kamiya555.github.io/2015/10/14/nerdtree-command/
"local mapping
nnoremap <silent> <Leader>n :NERDTree<CR>

"]でnerdtreeから抜け
"autocmd local FileType nerdtree nnoremap <buffer> <Esc> <c-w>p
autocmd local FileType nerdtree nnoremap <buffer> ] <c-w>l <c-w>k
"}}}

"""""mftags{{{
let g:mftag_c_enable_kinds = "cdfgstu"
let g:mftag_syntax_c_enable_kinds = "cdfgstu"
let g:mftag_auto_close = 1
let g:mftag_dir_auto_set = 1
let g:mftag_python_default = "cfv"
"]でfunction listから抜ける
autocmd local FileType FuncList nnoremap <buffer> ] <c-w>l <c-w>k

nnoremap <silent> <Leader>m :MFfunclist<CR>

function! s:Mygrep(...)
    "args 1 ... search word.
    "args 2 ... file extention.
    if &modified == 1
        echo "file not saved!"
        return
    endif
    if a:0 == '0'
        let l:word = expand('<cword>')
        let l:ft = expand('%:e')
    elseif a:0 == '1'
        let l:word = a:1
        let l:ft = expand('%:e')
    else
        let l:word = a:1
        let l:ft = a:2
    endif

    if &grepprg == "internal"
        execute 'grep /' . l:word . '/j ' . MFsearch_dir(g:mftag_dir) . '**/*.' . l:ft
    elseif &grepprg == "grep\ -nriI"
        let l:tabnum = tabpagenr()
        cclose
        "wincmd b
        "vsplit
        tabnew
        execute 'grep --include=\*.' . l:ft . ' "' . l:word . '" ' . MFsearch_dir(g:mftag_dir)
        cclose
        quit
        execute "normal! " . l:tabnum . "gt"
        botright copen
        unlet l:tabnum
    else
        echo "not supported grepprg"
    endif
endfunction
command! -nargs=* Gregrep call s:Mygrep(<f-args>)

"command! -nargs=1 Gregrep execute "grep /" . <f-args> . "/j " . MFsearch_dir(g:mftag_dir) . '**/*.' . expand('%:e')

"autocmd BufRead * execute "set path+=" . b:mftag_save_dir . "**/include"
function! s:AddPath()
    if exists("b:mftag_save_dir")
        if b:mftag_save_dir != "/"
            let l:save_dir = substitute(b:mftag_save_dir, " ", "\\\\ ", "")
            execute "set path+=" . l:save_dir . "**/include"
        endif
    endif
endfunction
autocmd BufRead * call s:AddPath()
"}}}

""""ctrlp{{{
"nnoremap <leader>s :<C-U>CtrlP<CR>
let g:ctrlp_map = '<leader>s'

"}}}

