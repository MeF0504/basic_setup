""vim plugin setting
"

"""""seiya.vim "{{{
"vimの背景を透過
let g:seiya_auto_enable=1
"}}}

"""""taglist.vim "{{{
"tag設定
set tags=tags;,./tags;
let Tlist_Exit_OnlyWindow = 1
if has('gui_running')
    let Tlist_WinWidth = 45
else
    let Tlist_WinWidth = 35
endif
"set splitbelow
"候補が複数ある場合にリストを表示
nnoremap <c-]> g<c-]>
nnoremap <silent> tt :Tlist<CR>
"<c-x>をlocal用のmappingにする。
nnoremap <silent> <c-x>t :Tlist<CR>
"jump先をnew tabで開く
nnoremap <c-j> :execute("tabnew " . b:cfile)<CR> <c-o> :execute("tjump " . expand('<cword>'))<CR>
"escでtag listから抜ける
"autocmd local FileType taglist nnoremap <buffer> <Esc> <c-w>p
autocmd local FileType taglist nnoremap <buffer> <Esc> <c-w>k <c-w>l

"taglistを縦分割で使う際に横ではなく下にlistが出るように変更する関数
function! Tlist_Horizon()
    let g:Tlist_Use_Horiz_Window=1
    Tlist
endfunction
"}}}

"""""NERDTree "{{{
"Bookmarkをデフォルト表示
let g:NERDTreeShowBookmarks=1
"見栄え
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable  = '>'
let g:NERDTreeDirArrowCollapsible = '!'

"参考:https://kamiya555.github.io/2015/10/14/nerdtree-command/
"local mapping
nnoremap <silent> <c-x>n :NERDTree<CR>

"Escでnerdtreeから抜け
"autocmd local FileType nerdtree nnoremap <buffer> <Esc> <c-w>p
autocmd local FileType nerdtree nnoremap <buffer> <Esc> <c-w>k <c-w>l
"}}}

"""""mftags{{{
let g:mftag_c_enable_kinds = "cdfgstu"
let g:mftag_syntax_c_enable_kinds = "cdfgstu"
let g:mftag_auto_close = 1
"escでfunction listから抜ける
autocmd local FileType FuncList nnoremap <buffer> <Esc> <c-w>k <c-w>l

function! s:Mygrep(...)
    "args 1 ... search word.
    "args 2 ... file extention.
    if a:0 == '0'
        let l:word = expand('<cword>')
        let l:ft = expand('%:e')
    elseif a:0 == '1'
        let l:word = a:1
        let l:ft = expand('%:e')
    else
        let l:word = a:1
        let l:ft = a:2
    endif
    if &grepprg == "internal"
        execute 'grep /' . l:word . '/j ' . MFsearch_dir(g:mftag_dir) . '**/*.[' . l:ft . ']'
    elseif &grepprg == "grep\ -n"
        execute 'grep "' . l:word . '" ' . MFsearch_dir(g:mftag_dir) . '**/*.' . l:ft
    elseif &grepprg == "grep\ -n\ $*\ /dev/null"
        execute 'grep "' . l:word . '" ' . MFsearch_dir(g:mftag_dir) . '**/*.' . l:ft
    else
        echo "not supported grepprg"
    endif
endfunction
command! -nargs=* Gregrep call s:Mygrep(<f-args>)

"command! -nargs=1 Gregrep execute "grep /" . <f-args> . "/j " . MFsearch_dir(g:mftag_dir) . '**/*.' . expand('%:e')

"autocmd BufRead * execute "set path+=" . b:mftag_save_dir . "**/include"
function! s:AddPath()
    if exists("b:mftag_save_dir")
        if b:mftag_save_dir != "/"
            execute "set path+=" . b:mftag_save_dir . "**/include"
        endif
    endif
endfunction
autocmd BufRead * call s:AddPath()
"}}}

